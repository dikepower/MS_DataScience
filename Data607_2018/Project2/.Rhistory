df<-list(symbols=c("MSFT","KO","CSCO"),price=c(21,23,54),currency=rep("USD",3))
df
length(df)
#data variable
dtVar<-Sys.Date()
dtvar
dtVar
x<-Sys.time()
x
class(dtVar)
class(x)
y<-as.data("2014-01-01",tz="UTC")
y<-as.Date("2014-01-01",tz="UTC")
y
class(y)
t<-ISOdate(2014,12,12)
t
as.Integer(y)
as.integer(y)
julian(y)
#get date info from date
d<-Sys.time
p<-POSSIXIt(d)
p<-POSIXIt(d)
p<-as.POSIXIt(d)
p<-as.POSIXlt(d)
help(POSIXlt)
p<-as.POSIXlt(d)
d
x<-Sys.time()
x
p<-as.POSIXlt(x)
p
class(p)
mode(p)
P$year
p
p
P$year
p
p$mon
p$mon+1
p$mday
p$yday+1
p$wday
p$year
p$year+1900
q()
ls()
ls.str()
x<-1:100
which.max(x)
which.min(x)
x<-c(1,2,3,5,2,1)
which.max(x)
which.min(x)
sort(x)
sort(x,decreasing=T)
rev(x)
x
x<-c(1,-1,1,1,1,1,-1,-1,1,1,1,1,1,1)
y<-rle(x)
mode(y)
y
rnorm(10,8,4)
q()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(quantmod)
getSymbols("BP",src="yahoo",from="2015-7-20",to=Sys.Date())
getSymbols("GSPC",src="yahoo",from="2015-7-20",to=Sys.Date())
? getSymbols
getSymbols('F')
getSymbols(c('QQQ','SPY'))
library(quantmod)
getSymbols(c('QQQ','SPY'))
getSymbols("GSPC",src="yahoo",from="2015-7-20",to=Sys.Date())
getSymbols("^GSPC",src="yahoo",from="2015-7-20",to=Sys.Date())
head(GSPC)
tail(GSPC)
head(QQQ)
tail(QQQ)
head(BP)
tail(BP)
class(BP)
is.OHLC(BP)
is.OHLCV(BP)
szSymbols<-C("MSFT","CSCO","TSLA","AAPL",BP")
)
getSymbos
)
q()
head(BP)
q()
q()
q()
getSymbols("^GSPC",src="yahoo",from="2015-7-20",to=Sys.Date())
getSymbols("^TNX,src="yahoo",from="2015-06-30", to=Sys.Date())
getSymbols("^TNX",src="yahoo",from="2015-06-30", to=Sys.Date())
tnx
TNX
tail(TNX)
getSymbos("ACWI",src="yahoo", from="2014-01-01",to=Sys.Date())
getSymbols("ACWI",src="yahoo", from="2014-01-01",to=Sys.Date())
ACWI
fetFX("USD/CNY")
getFX("USD/CNY")
tail(USDCNY
)
getFX("USD/EUR",src="oanda")
USDEUR
tmp<-getQuote("AAPL")
tmp
class(tmp)
getFinancials("TSLA")
viewFin(TSLA.f)
getDivident("AAPL")
getDividends("AAPL")
getSplits("BIDU")
getDividends("BP")
getSymbols("BP", from='2000-01-01",src="yahoo")
getSymbols("BP", from='2000-01-01",src="yahoo")
getSymbols("BP", from="2000-01-01",src="yahoo")
head(BP)
BP.a<-adjustOHLC(BP)
BP.a
head(BP.uA<-adjustOHLC(BP,use.Adjusted=T))
head(cbind(OpCl(BP),OpCl(BP.a),OpCl(BP.ua)))
BP.OPT<-getOptionChain("BP")
BIDU.OPT<-getOptionChain("BIDU")
? getOptionChain
AAPL.2015 <- getOptionChain("AAPL", "2015/2016")
utils:::menuInstallPkgs()
library(XML)
AAPL.2015 <- getOptionChain("AAPL", "2015/2016")
head(AAPL.2015)
list(APPL.2015)
BP.OPT<-getOptionChain("BP")
class(BP.OPT)
BP.$symbol
BP.OPT$symbol
BP.OPT$calls
BP.OPT$puts
$smbol
$symbol
save.image("C:\\Users\\MSBI\\Documents\\R document\\stock")
q()
install.packages("C:/Users/MSBI/Downloads/SnowballC_0.5.1.zip", repos = NULL, type = "win.binary")
library(SnowballC)
library(SnowballC)
wordStem( c('functions','Streaming','liked','doing'))
snowball
library(SnowballC)
library(SnowballC)
install.packages("C:/Users/MSBI/Downloads/SnowballC_0.5.1.zip", repos = NULL, type = "win.binary")
library(SnowballC)
wordStem('I like R and Python')
wordStem( c('I like R and Python. Every day')
)
wordStem( c('I like R and Python.',' Every day'))
install.packages("RWeka")
library(RWeka)
library("RWeka", lib.loc="~/R/win-library/3.3")
install.packages("RWeka")
install.packages("RWeka")
library(RWeka)
library("xlsx", lib.loc="~/R/win-library/3.3")
workbook<-"C:\Users\MSBI\Documents\test.xlsx"
workbook<-"C:/Users/MSBI/Documents\test.xlsx"
mydataframe <-read.xlsx(workbook,header=TRUE)
mydataframe <-read.xlsx(workbook,1,header=TRUE)
workbook<-"C:/test.xlsx"
mydataframe <-read.xlsx(workbook,1,header=TRUE)
mydataframe
library("MASS", lib.loc="C:/Program Files/R/R-3.3.2/library")
install.packages("AER")
install.packages("pscl")
library("pscl", lib.loc="~/R/win-library/3.3")
library("AER", lib.loc="~/R/win-library/3.3")
attach(mydataframe)
Y<-cbind(final)
X<-cbind(old,size)
summary(X)
summary(Y)
poisson(<-glm(Y~X,family=poisson))
poisson<-glm(Y~X,family=poisson)
summary(poisson)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown','shiny','R.rsp'))
knitr::opts_chunk$set(echo = TRUE)
raw.data <-"555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5553642Dr. Julius Hibbert"
print (pl+geom_point(
))
library(ggplot2)
df <- mtcars
pl <- ggplot(df, ase(x=wt, y=mpg))
print (pl+geom_point())
pl <- ggplot(df, aes(x=wt, y=mpg))
library(ggplot2)
df <- mtcars
pl <- ggplot(df, aes(x=wt, y=mpg))
print (pl+geom_point())
print (pl+geom_point(color="red"))
print (pl+geom_point(color="red",size=6, alpha=0.5))
print (pl+geom_point(color="red",size=6, alpha=0.4))
print (pl+geom_point(aes(size=hp)))
print (pl+geom_point(aes(size=hp , color='red')))
print (pl+geom_point(aes(size=factor(cyl)
, color=cyl)))
print (pl+geom_point(aes(size=factor(cyl)
, color=factor(cyl)))
print (pl+geom_point(aes(size=factor(cyl)
, color=factor(cyl))))
print (pl+geom_point(aes(shape=factor(cyl)
, color=factor(cyl)), , size=8))
print (pl+geom_point(aes(shape=factor(cyl)
, color=factor(cyl)), , size=5))
df <- mpg
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar())
head(mpg)
df <- mpg
head(mpg)
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar(aes(fill=drv), position = "dodge"))
print(pl +geom_bar(aes(fill=drv))
df <- mpg
head(mpg)
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar(aes(fill=drv))
df <- mpg
head(mpg)
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar(aes(fill=drv)))
df <- mpg
df <- mpg
head(mpg)
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar(aes(fill=drv),position = "dodge")))
print(pl +geom_bar(aes(fill=drv)),position = "dodge"))
head(mpg)
pl <- ggplot(df, aes(x=class))
print(pl +geom_bar(aes(fill=drv),position = "dodge"))
df <- mpg
head(mpg)
pl <- ggplot(df, aes(x=class))
#print(pl +geom_bar(aes(fill=drv),position = "dodge"))
print(pl +geom_bar(aes(fill=drv),position = "fill"))
df <- mtcars
pl <- ggplot(df, aes(x=cyl, y=mpg))
df <- mtcars
pl <- ggplot(df, aes(x=factor(cyl), y=mpg))
print (pl +geom_boxplot())
df <- mtcars
pl <- ggplot(df, aes(x=factor(cyl), y=mpg))
#print (pl +geom_boxplot())
print (pl +geom_boxplot()+coord_flip())
#print (pl +geom_boxplot()+coord_flip())
print (pl +geom_boxplot(aes(fill= factor(cyl)))+theme_bw())
library(ggplot2movies)
pl <- ggplot(movies,aes(x=year, y=rating))
print (pl+geom_bin2d())
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
pl2 <- pl+geom_bin2d()
print(pl1 +scale_fill_gradient(high='red', low='green'))
library(ggplot2movies)
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
pl2 <- pl+geom_bin2d()
print(pl2 +scale_fill_gradient(high='red', low='green'))
#print (pl+geom_bin2d())
pl2 <- pl+geom_bin2d(binwideth=c(3,1))
library(ggplot2movies)
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
pl2 <- pl+geom_bin2d(binwidth=c(3,1))
print(pl2 +scale_fill_gradient(high='red', low='blue'))
library(ggplot2movies)
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
#pl2 <- pl+geom_bin2d(binwidth=c(3,1))
pl2 <- pl+geom_hex()
print(pl2 +scale_fill_gradient(high='red', low='blue'))
library(ggplot2movies)
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
#pl2 <- pl+geom_bin2d(binwidth=c(3,1))
#pl2 <- pl+geom_hex()
pl2 <- pl+geom_density()
print(pl2 +scale_fill_gradient(high='red', low='blue'))
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
#pl2 <- pl+geom_bin2d(binwidth=c(3,1))
#pl2 <- pl+geom_hex()
pl2 <- pl+geom_density()
#print(pl2 +scale_fill_gradient(high='red', low='blue'))
print(pl2)
pl <- ggplot(movies,aes(x=year, y=rating))
#print (pl+geom_bin2d())
#pl2 <- pl+geom_bin2d(binwidth=c(3,1))
#pl2 <- pl+geom_hex()
pl2 <- pl+geom_density2d()
#print(pl2 +scale_fill_gradient(high='red', low='blue'))
print(pl2)
pl <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
print(p2)
pl <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
print(p2)
pl <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
p2 <- pl+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
print(p2)
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
#p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
#p2 <- p1+coord_fixed(ratio = 1/3)
p2 <- p1 +facet_grid()
print(p2)
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
#p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
#p2 <- p1+coord_fixed(ratio = 1/3)
p2 <- p1 +facet_grid(. ~cyl)
print(p2)
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
#p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
#p2 <- p1+coord_fixed(ratio = 1/3)
#p2 <- p1 +facet_grid(. ~cyl)
p2 <- facet_grid(drv~.)
print(p2)
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
#p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
#p2 <- p1+coord_fixed(ratio = 1/3)
#p2 <- p1 +facet_grid(. ~cyl)
p2 <- facet_grid(drv ~ .)
print(p2)
p1 <- ggplot(mpg,aes(x=displ,y=hwy))+geom_point()
#p2 <- p1+coord_cartesian(xlim=c(1,4 ), ylim = c(15,30))
#p2 <- p1+coord_fixed(ratio = 1/3)
#p2 <- p1 +facet_grid(. ~cyl)
p2 <- p1+ facet_grid(drv ~ .)
print(p2)
lol.url <- "https://en.wikipedia.org/wiki/List_of_datasets_for_machine_learning_research"
lol.url
lilibrary(RSelenium)
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open()
# 用无头浏览器模拟访问，创建一个remoteDriver对象并打开
remDr$navigate(lol.url)
library(RSelenium)
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open()
# 用无头浏览器模拟访问，创建一个remoteDriver对象并打开
remDr$navigate(lol.url)
install.packages（"XML"）
library(XML)
u<-"http://www.chinacustomsstat.com/aspx/1/NewData/Stat_Class.aspx?state=1&t=2&guid=7146"
pop<-readHTMLTable(u,which=1)
pop
u<-"https://en.wikipedia.org/wiki/List_of_datasets_for_machine_learning_research"
pop<-readHTMLTable(u,which=1)
pop
library("rvest")
install.packages("rvest")
install.packages('yaml')
install.packages("yaml")
install.packages("rvest")
library("rvest")
install.packages('rvest')
library("rvest")
library(rvest)
install.package("rvest")
install.packages("rvest")
library("rvest")
install.packages("rvest")
install_github("hadley/rvest")
require(devtools)
install_version("yaml", version = "2.1.19", repos = "http://cran.us.r-project.org")
install.packages("rvest")
install.packages('yaml')
install.packages("yaml")
library(diamonds)
library(diamonds)
library(diamonds)
install.packages("diamonds")
install.packages("diamond")
library(diamond)
head(diamonds)
library(ggplot2)
qplot(carat, price, data = diamonds)
qplot(log(carat), log(price), data = diamonds)
qplot(carcat, x*y*z data= diamonds)
qplot(carcat, x*y*z, data= diamonds)
qplot(carat, x*y*z, data= diamonds)
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100), ]
dsmall
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100), ]
dsmall
qplot(carat, price, data = dsmall, colour =color)
qplot (carat, price, data=dsmall, shape =out)
qplot (carat, price, data=dsmall, shape =cut)
set.seed(1410)
dsmall <- diamonds[sample(nrow(diamonds),100), ]
dsmall
#qplot(carat, price, data = dsmall, colour =color)
#qplot (carat, price, data=dsmall, shape =cut)
qplot (carat, price , data =dsmall, alpha=0.5)
qplot (carat, price , data =dsmall, alpha=0.01)
qplot (carat, price , data =diamonds, alpha=0.01)
qplot (carat, price , data =diamonds, alpha=0.001)
qplot (carat, price , data =dsmall , geom = c("point", "smooth"))
qplot(carat, price, data=dsmall, geom = c("point", "smooth"), method ="gam", formula =y~s(x))
qplot (carat, price , data =dsmall , geom = c("point", "smooth"), span=0.2)
qplot(color, price/carat, data=diamonds, geom = "boxplot")
qplot(color, price/carat, data=diamonds, geom = "jitter")
qplot(color, price/carat, data=diamonds, geom = "jitter", alpha =0.01)
qplot(color, price/carat, data=diamonds, geom = "histogram", alpha =0.01)
qplot(color, price/carat, data=diamonds, geom = "histogram", binwidth =1, xlim-c(0,3), alpha =0.01)
qplot(carat, data=diamonds, geom = "histogram", binwidth =1, xlim-c(0,3), alpha =0.01)
qplot(carat, data=diamonds, geom = "histogram", binwidth =1, xlim-c(0,3))
qplot(carat, data=diamonds, geom = "histogram", binwidth =1)
qplot(carat, data=diamonds, geom = "histogram", binwidth =0.1)
qplot(carat, data=diamonds, geom = "histogram", binwidth =0.1, xlim = c(0,3))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
qplot(carat, data = diamonds, geom ="density", colour=color)
qplot(color, data = diamonds, geom = "bar")
qplot(color, data = diamonds, geom = "bar", weight=carat)+scale_y_continuous(carat
)
qplot(color, data = diamonds, geom = "bar", weight=carat)+scale_y_continuous("carat")
#economics
qplot(date, unemploy/pop, data = economics, geom = "line")
qplot(date, unemploy/pop, data = economics, geom = "path", colour = year(date))+scale_size_area()
qplot(date, unemploy/pop, data = economics, geom = "path", colour = year(date))+scale.area()
qplot(date, unemploy/pop, data = economics, geom = "path", colour = year(date))+scale_size_area()
qplot(date, unemploy/pop, data = economics, geom = "path")+scale_size_area()
qplot(carat, data=diamonds, geom = "histogram", binwidth =0.1, xlim = c(0,3), facets = color~.)
qplot(carat, price, data=dsmall, xlab = "Price($)", vlab="Weight(carats)", main = "Price-Weight relationship")
head(mpg)
library(ggplot2)
qplot(displ, hwy, data = mpg, colour=factor(cyl))
qplot(date, unemploy/pop, data = mpg, facets = .~year )+ geom_smooth()
qplot(displ, hwy, data = mpg, facets = .~year )+ geom_smooth()
p1 <- ggplot(diamonds, aes(x=carat, y=price, colour=cut ))
print (p1)
p1 <- ggplot(diamonds, aes(carat, price, colour=cut ))
print (p1)
p1 <- ggplot(diamonds, aes(carat, price, colour=cut ))
summary (p1)
print (p1)
p1 <- ggplot(diamonds, aes(carat, price, colour=cut ))+geom_bar()
summary (p1)
print (p1)
p1 <- ggplot(diamonds, aes(carat, price, colour=cut ))+geom_point()
summary (p1)
print (p1)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_bar(binwidth = 2, color="blue")
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 2, color="blue")
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 2, color="blue")
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 2)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 2)
print (p2)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 10)
print (p2)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 0.2)
print (p2)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 0.2, fill='blue')
print (p2)
p2 <- ggplot(diamonds, aes(x=carat))
p2 <- p2+geom_histogram(binwidth = 0.2, fill='blue', size =0.2)
print (p2)
knitr::opts_chunk$set(echo = TRUE)
print(ggplot(diamondas, aes(carat, price , color=cut))+geom_point())
library(ggplot2)
print(ggplot(diamondas, aes(carat, price , color=cut))+geom_point())
print(ggplot(diamonds, aes(carat, price , color=cut))+geom_point())
library(likert)
install.packages("likert")
install.packages("reshape")
install.packages("likert")
install.packages("reshape")
knitr::opts_chunk$set(echo = TRUE)
install.packages("likert")
install.packages("reshape")
install.packages("likert")
install.packages("reshape")
install.packages("likert")
install.packages("reshape")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
setwd("H:/Learning/MS_DataScience/607_DataAcquisition_And_Management/Project2")
df2 <- read.csv("insurance.csv")
head(df2)
head(df2)
#Visualise distribution of charges by agegroup,sex and region
df2.target%>%
ggplot(aes(region,charges,fill=sex))+geom_boxplot()+facet_grid(~Agegroup)+
ggtitle("Insurance Charge distribution by Age, Sex and region")
